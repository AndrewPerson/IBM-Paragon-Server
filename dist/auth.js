const e=require("process");const t=require("axios").default;class r{constructor(e){if("error"in e)throw new Error(e.error);if(!("access_token"in e))throw new Error("No access token present in token");if(this.access_token=e.access_token,!("refresh_token"in e))throw new Error("No refresh token present in token");if(this.refresh_token=e.refresh_token,"expiry"in e)this.expiry=new Date(e.expiry);else{var t=new Date;"expires_in"in e?t.setHours(t.getHours()+e.expires_in/3600):t.setHours(t.getHours()+1),this.expiry=t}if("termination"in e)this.termination=new Date(e.termination);else{var r=new Date;r.setHours(r.getHours()+2160),this.termination=r}}async refresh(e,r){var o=(await t.post("https://student.sbhs.net.au/api/token",new URLSearchParams({refresh_token:this.refresh_token,grant_type:"refresh_token",client_id:e,client_secret:r}),{headers:{"Content-Type":"application/x-www-form-urlencoded"}})).data;if("error"in o)throw new Error(o.error);if(!("access_token"in o))throw new Error("No access token present in token");if(this.access_token=o.access_token,"expiry"in o)this.expiry=new Date(o.expiry);else{var s=new Date;s.setHours(s.getHours()+1),this.expiry=s}}}const o=require("axios").default;var s;s={post:async function(e){if(!e.__ow_body)return{statusCode:400,body:"You must provide a code"};if(0==e.__ow_body.length)return{statusCode:400,body:"You must provide a code"};var t=await o.post("https://student.sbhs.net.au/api/token",new URLSearchParams({code:e.__ow_body,grant_type:"authorization_code",client_id:e.client_id,client_secret:e.client_secret,redirect_uri:"https://beta-paragon.web.app/callback"}),{headers:{"Content-Type":"application/x-www-form-urlencoded"}});return{statusCode:200,body:new r(t.data)}}},global.main=async function(t){if(!(t.__ow_method in s))return{statusCode:405,body:"Unsupported HTTP method"};var r;try{r=await s[t.__ow_method](t)}catch(t){return console.log("LOGVERSION 3"),console.log("SUCCEEDED false"),console.log(`MEMORY ${e.memoryUsage().rss}`),{statusCode:500,body:`Error: ${t.message} Stack Trace: ${t.stack}`}}var o={statusCode:r.statusCode,headers:r.headers,body:r.body};return console.log("LOGVERSION 3"),console.log(`SUCCEEDED ${r.statusCode>=200&&r.statusCode<300}`),console.log(`MEMORY ${e.memoryUsage().rss}`),o};

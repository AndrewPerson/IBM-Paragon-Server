var t=require("process"),u="LOGVERSION 3";function c(o){global.main=async e=>{e.__ow_body!==void 0&&e.__ow_body!==null&&(e=Object.assign(JSON.parse(e.__ow_body),e));try{var n=await o(e)}catch(i){return console.log(i),console.log("SUCCEEDED false"),console.log(`MEMORY ${t.memoryUsage().rss}`),{statusCode:500,body:"Internal Server Error"}}var s=n.statusCode||200,r={statusCode:s,body:n.body};return console.log(u),console.log(`SUCCEEDED ${s>=200&&s<300}`),console.log(`MEMORY ${t.memoryUsage().rss}`),r}}var a=require("mysql");c(async o=>{let e=(0,a.createConnection)({host:o.SQL_HOST,port:3306,user:o.SQL_USER,password:o.SQL_PASSWORD,database:"paragon",ssl:{rejectUnauthorized:!0}});return await new Promise((n,s)=>{e.connect(r=>{r?s(r):n()})}),await new Promise((n,s)=>{e.query("INSERT INTO incidents (error_message, stack_trace, version) VALUES (?, ?, ?)",[o.error_message,o.stack_trace,o.version],r=>{r?s(r):n()})}),{body:"Success"}});
